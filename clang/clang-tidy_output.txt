Analiziram fajl: ../src/Card.cpp
12426 warnings generated.
/home/user/ECE350Final/src/Card.cpp:1:1: warning: #includes are not sorted properly [llvm-include-order]
#include <iostream>
^        ~~~~~~~~~~
         "Card.h"
/home/user/ECE350Final/src/Card.cpp:4:1: warning: do not use namespace using-directives; use using-declarations instead [google-build-using-namespace]
using namespace std;
^
/home/user/ECE350Final/src/Card.cpp:6:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int Card::getNumValue(){
~~~       ^
auto                    -> int
/home/user/ECE350Final/src/Card.cpp:6:11: warning: method 'getNumValue' can be made const [readability-make-member-function-const]
int Card::getNumValue(){
          ^
                        const
/home/user/ECE350Final/src/Card.cpp:7:7: warning: variable 'card' is not initialized [cppcoreguidelines-init-variables]
  int card; //to store numerical value
      ^
           = 0
/home/user/ECE350Final/src/Card.cpp:11:12: warning: 14 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
    card = 14;
           ^
/home/user/ECE350Final/src/Card.cpp:11:12: warning: 14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:14:12: warning: 13 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
    card = 13;
           ^
/home/user/ECE350Final/src/Card.cpp:14:12: warning: 13 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:17:12: warning: 12 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
    card = 12;
           ^
/home/user/ECE350Final/src/Card.cpp:17:12: warning: 12 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:20:12: warning: 11 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
    card = 11;
           ^
/home/user/ECE350Final/src/Card.cpp:20:12: warning: 11 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:23:12: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
    card = 10;
           ^
/home/user/ECE350Final/src/Card.cpp:23:12: warning: 10 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:29:12: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
    card = (int)val - 48;
           ^~~~~
           static_cast<int>( )
/home/user/ECE350Final/src/Card.cpp:29:23: warning: 48 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
    card = (int)val - 48;
                      ^
/home/user/ECE350Final/src/Card.cpp:29:23: warning: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:35:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
bool Card::setSuit(char s){
~~~~       ^
auto                       -> bool
/home/user/ECE350Final/src/Card.cpp:66:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
bool Card::setVal(char value){
~~~~       ^
auto                          -> bool
/home/user/ECE350Final/src/Card.cpp:68:23: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
  if((value - '0') >= 6 && (value - '0') <= 9){
                      ^
/home/user/ECE350Final/src/Card.cpp:68:23: warning: 6 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:68:45: warning: 9 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
  if((value - '0') >= 6 && (value - '0') <= 9){
                                            ^
/home/user/ECE350Final/src/Card.cpp:68:45: warning: 9 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:72:21: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
      return setVal(10);
                    ^
/home/user/ECE350Final/src/Card.cpp:72:21: warning: 10 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:75:21: warning: 11 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
      return setVal(11);
                    ^
/home/user/ECE350Final/src/Card.cpp:75:21: warning: 11 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:79:21: warning: 12 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
      return setVal(12);
                    ^
/home/user/ECE350Final/src/Card.cpp:79:21: warning: 12 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:82:21: warning: 13 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
      return setVal(13);
                    ^
/home/user/ECE350Final/src/Card.cpp:82:21: warning: 13 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:85:21: warning: 14 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
      return setVal(14);
                    ^
/home/user/ECE350Final/src/Card.cpp:85:21: warning: 14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:93:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
bool Card::setVal(int value){
~~~~       ^
auto                         -> bool
/home/user/ECE350Final/src/Card.cpp:97:15: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
  if(value >= 6 && value <= 9) {
              ^
/home/user/ECE350Final/src/Card.cpp:97:15: warning: 6 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:97:29: warning: 9 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
  if(value >= 6 && value <= 9) {
                            ^
/home/user/ECE350Final/src/Card.cpp:97:29: warning: 9 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:98:13: warning: narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions]
      val = value + 48;
            ^
/home/user/ECE350Final/src/Card.cpp:98:13: warning: narrowing conversion from 'int' to signed type 'char' is implementation-defined [cppcoreguidelines-narrowing-conversions]
/home/user/ECE350Final/src/Card.cpp:98:21: warning: 48 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
      val = value + 48;
                    ^
/home/user/ECE350Final/src/Card.cpp:98:21: warning: 48 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:101:3: warning: potential uncovered code path; add a default label [hicpp-multiway-paths-covered]
  switch(value){
  ^
/home/user/ECE350Final/src/Card.cpp:102:8: warning: 10 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
  case 10:
       ^
/home/user/ECE350Final/src/Card.cpp:102:8: warning: 10 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:105:8: warning: 11 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
  case 11:
       ^
/home/user/ECE350Final/src/Card.cpp:105:8: warning: 11 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:108:8: warning: 12 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
  case 12:
       ^
/home/user/ECE350Final/src/Card.cpp:108:8: warning: 12 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:111:8: warning: 13 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
  case 13:
       ^
/home/user/ECE350Final/src/Card.cpp:111:8: warning: 13 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:114:8: warning: 14 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
  case 14:
       ^
/home/user/ECE350Final/src/Card.cpp:114:8: warning: 14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Card.cpp:125:12: warning: method 'print' can be made const [readability-make-member-function-const]
void Card::print(){
           ^
                   const
/home/user/ECE350Final/src/Card.cpp:126:17: warning: statement should be inside braces [google-readability-braces-around-statements]
  if(val == '0')
                ^
                 {
/home/user/ECE350Final/src/Card.cpp:126:17: warning: statement should be inside braces [hicpp-braces-around-statements]
  if(val == '0')
                ^
                 {
/home/user/ECE350Final/src/Card.cpp:126:17: warning: statement should be inside braces [readability-braces-around-statements]
  if(val == '0')
                ^
                 {
/home/user/ECE350Final/src/Card.cpp:128:7: warning: statement should be inside braces [google-readability-braces-around-statements]
  else
      ^
       {
/home/user/ECE350Final/src/Card.cpp:128:7: warning: statement should be inside braces [hicpp-braces-around-statements]
  else
      ^
       {
/home/user/ECE350Final/src/Card.cpp:128:7: warning: statement should be inside braces [readability-braces-around-statements]
  else
      ^
       {
/home/user/ECE350Final/src/Card.cpp:147:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
bool Card::isEmpty() {
~~~~       ^
auto                 -> bool
/home/user/ECE350Final/src/Card.cpp:147:12: warning: method 'isEmpty' can be made const [readability-make-member-function-const]
bool Card::isEmpty() {
           ^
                     const
Suppressed 12363 warnings (12363 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

Analiziram fajl: ../src/Deck.cpp
23034 warnings generated.
/home/user/ECE350Final/src/Deck.cpp:2:1: warning: #includes are not sorted properly [llvm-include-order]
#include <iostream>
^        ~~~~~~~~~~
         "Deck.h"
/home/user/ECE350Final/src/Deck.cpp:7:1: warning: do not use namespace using-directives; use using-declarations instead [google-build-using-namespace]
using namespace std;
^
/home/user/ECE350Final/src/Deck.cpp:14:3: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays]
  char suits[4] = {'H', 'D', 'S', 'C'};
  ^
/home/user/ECE350Final/src/Deck.cpp:14:3: warning: do not declare C-style arrays, use std::array<> instead [hicpp-avoid-c-arrays]
/home/user/ECE350Final/src/Deck.cpp:14:3: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
/home/user/ECE350Final/src/Deck.cpp:18:3: warning: use range-based for loop instead [modernize-loop-convert]
  for(int i = 0; i < 4; i++){
  ^  ~~~~~~~~~~~~~~~~~~~~~~~
     (char suit : suits)
/home/user/ECE350Final/src/Deck.cpp:19:15: warning: do not use array subscript when the index is not an integer constant expression; use gsl::at() instead [cppcoreguidelines-pro-bounds-constant-array-index]
    c.setSuit(suits[i]);
              ^
/home/user/ECE350Final/src/Deck.cpp:21:17: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
    for(int j = 6; j <= 14; j++){
                ^
/home/user/ECE350Final/src/Deck.cpp:21:17: warning: 6 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Deck.cpp:21:25: warning: 14 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
    for(int j = 6; j <= 14; j++){
                        ^
/home/user/ECE350Final/src/Deck.cpp:21:25: warning: 14 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Deck.cpp:41:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
Card Deck::drawCard(){
~~~~       ^
auto                  -> Card
/home/user/ECE350Final/src/Deck.cpp:81:3: warning: use range-based for loop instead [modernize-loop-convert]
  for(int i = 0; i < (int)deck.size(); i++){
  ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     (auto & i : deck)
/home/user/ECE350Final/src/Deck.cpp:81:22: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
  for(int i = 0; i < (int)deck.size(); i++){
                     ^
note: this fix will not be applied because it overlaps with another fix
/home/user/ECE350Final/src/Deck.cpp:88:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
Deck Deck::drawHand(){
~~~~       ^
auto                  -> Deck
/home/user/ECE350Final/src/Deck.cpp:92:22: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
  for(int i = 0; i < 6; i++){
                     ^
/home/user/ECE350Final/src/Deck.cpp:92:22: warning: 6 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
/home/user/ECE350Final/src/Deck.cpp:101:11: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int Deck::firstPlayer(Deck hand1, Deck hand2, char suit){
~~~       ^
auto                                                     -> int
/home/user/ECE350Final/src/Deck.cpp:112:36: warning: statement should be inside braces [google-readability-braces-around-statements]
        if(cards1[i].getNumValue() < min1)
                                          ^
                                           {
/home/user/ECE350Final/src/Deck.cpp:112:36: warning: statement should be inside braces [hicpp-braces-around-statements]
        if(cards1[i].getNumValue() < min1)
                                          ^
                                           {
/home/user/ECE350Final/src/Deck.cpp:112:36: warning: statement should be inside braces [readability-braces-around-statements]
        if(cards1[i].getNumValue() < min1)
                                          ^
                                           {
/home/user/ECE350Final/src/Deck.cpp:127:36: warning: statement should be inside braces [google-readability-braces-around-statements]
        if(cards2[i].getNumValue() < min2)
                                          ^
                                           {
/home/user/ECE350Final/src/Deck.cpp:127:36: warning: statement should be inside braces [hicpp-braces-around-statements]
        if(cards2[i].getNumValue() < min2)
                                          ^
                                           {
/home/user/ECE350Final/src/Deck.cpp:127:36: warning: statement should be inside braces [readability-braces-around-statements]
        if(cards2[i].getNumValue() < min2)
                                          ^
                                           {
/home/user/ECE350Final/src/Deck.cpp:135:19: warning: statement should be inside braces [google-readability-braces-around-statements]
    if(min2 == -1) //if neither has a trump card, give to player 1
                  ^
                   {
/home/user/ECE350Final/src/Deck.cpp:135:19: warning: statement should be inside braces [hicpp-braces-around-statements]
    if(min2 == -1) //if neither has a trump card, give to player 1
                  ^
                   {
/home/user/ECE350Final/src/Deck.cpp:135:19: warning: statement should be inside braces [readability-braces-around-statements]
    if(min2 == -1) //if neither has a trump card, give to player 1
                  ^
                   {
/home/user/ECE350Final/src/Deck.cpp:137:5: warning: do not use 'else' after 'return' [readability-else-after-return]
    else //player 2 has a trump card
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/user/ECE350Final/src/Deck.cpp:137:9: warning: statement should be inside braces [google-readability-braces-around-statements]
    else //player 2 has a trump card
        ^
         {
/home/user/ECE350Final/src/Deck.cpp:137:9: warning: statement should be inside braces [hicpp-braces-around-statements]
    else //player 2 has a trump card
        ^
         {
/home/user/ECE350Final/src/Deck.cpp:137:9: warning: statement should be inside braces [readability-braces-around-statements]
    else //player 2 has a trump card
        ^
         {
/home/user/ECE350Final/src/Deck.cpp:141:19: warning: statement should be inside braces [google-readability-braces-around-statements]
    if(min2 == -1) //player 2 has no trump
                  ^
                   {
/home/user/ECE350Final/src/Deck.cpp:141:19: warning: statement should be inside braces [hicpp-braces-around-statements]
    if(min2 == -1) //player 2 has no trump
                  ^
                   {
/home/user/ECE350Final/src/Deck.cpp:141:19: warning: statement should be inside braces [readability-braces-around-statements]
    if(min2 == -1) //player 2 has no trump
                  ^
                   {
/home/user/ECE350Final/src/Deck.cpp:143:5: warning: do not use 'else' after 'return' [readability-else-after-return]
    else
    ^~~~
          return (min1 < min2) ? 1 : 2
/home/user/ECE350Final/src/Deck.cpp:143:9: warning: statement should be inside braces [google-readability-braces-around-statements]
    else
        ^
         {
/home/user/ECE350Final/src/Deck.cpp:143:9: warning: statement should be inside braces [hicpp-braces-around-statements]
    else
        ^
         {
/home/user/ECE350Final/src/Deck.cpp:143:9: warning: statement should be inside braces [readability-braces-around-statements]
    else
        ^
         {
/home/user/ECE350Final/src/Deck.cpp:148:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
Card Deck::askCard(){
~~~~       ^
auto                 -> Card
/home/user/ECE350Final/src/Deck.cpp:170:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
Card Deck::askCard(Deck table){
~~~~       ^
auto                           -> Card
/home/user/ECE350Final/src/Deck.cpp:172:6: warning: the 'empty' method should be used to check for emptiness instead of 'size' [readability-container-size-empty]
  if(tableCards.size() == 0){
     ^~~~~~~~~~~~~~~~~~~~~~
     tableCards.empty()
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_vector.h:1004:7: note: method 'vector'::empty() defined here
      empty() const _GLIBCXX_NOEXCEPT
      ^
/home/user/ECE350Final/src/Deck.cpp:195:5: warning: use range-based for loop instead [modernize-loop-convert]
    for(int i = 0; i < (int)tableCards.size(); i++){
    ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       (auto & tableCard : tableCards)
/home/user/ECE350Final/src/Deck.cpp:195:24: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
    for(int i = 0; i < (int)tableCards.size(); i++){
                       ^
note: this fix will not be applied because it overlaps with another fix
/home/user/ECE350Final/src/Deck.cpp:196:57: warning: statement should be inside braces [google-readability-braces-around-statements]
      if(c.getNumValue() == tableCards[i].getNumValue()) //if valid value
                                                        ^
                                                         {
/home/user/ECE350Final/src/Deck.cpp:196:57: warning: statement should be inside braces [hicpp-braces-around-statements]
      if(c.getNumValue() == tableCards[i].getNumValue()) //if valid value
                                                        ^
                                                         {
/home/user/ECE350Final/src/Deck.cpp:196:57: warning: statement should be inside braces [readability-braces-around-statements]
      if(c.getNumValue() == tableCards[i].getNumValue()) //if valid value
                                                        ^
                                                         {
/home/user/ECE350Final/src/Deck.cpp:199:15: warning: statement should be inside braces [google-readability-braces-around-statements]
    if(!valid) //if invalid, prompt again
              ^
               {
/home/user/ECE350Final/src/Deck.cpp:199:15: warning: statement should be inside braces [hicpp-braces-around-statements]
    if(!valid) //if invalid, prompt again
              ^
               {
/home/user/ECE350Final/src/Deck.cpp:199:15: warning: statement should be inside braces [readability-braces-around-statements]
    if(!valid) //if invalid, prompt again
              ^
               {
/home/user/ECE350Final/src/Deck.cpp:207:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
Card Deck::askCard(Card card, char trump){
~~~~       ^
auto                                      -> Card
/home/user/ECE350Final/src/Deck.cpp:212:62: warning: statement should be inside braces [google-readability-braces-around-statements]
    if(deck[i].getSuit() == trump && card.getSuit() != trump) //trump wins
                                                             ^
                                                              {
/home/user/ECE350Final/src/Deck.cpp:212:62: warning: statement should be inside braces [hicpp-braces-around-statements]
    if(deck[i].getSuit() == trump && card.getSuit() != trump) //trump wins
                                                             ^
                                                              {
/home/user/ECE350Final/src/Deck.cpp:212:62: warning: statement should be inside braces [readability-braces-around-statements]
    if(deck[i].getSuit() == trump && card.getSuit() != trump) //trump wins
                                                             ^
                                                              {
/home/user/ECE350Final/src/Deck.cpp:214:90: warning: statement should be inside braces [google-readability-braces-around-statements]
    if(deck[i].getSuit() == card.getSuit() && deck[i].getNumValue() > card.getNumValue()) //higher card wins
                                                                                         ^
                                                                                          {
/home/user/ECE350Final/src/Deck.cpp:214:90: warning: statement should be inside braces [hicpp-braces-around-statements]
    if(deck[i].getSuit() == card.getSuit() && deck[i].getNumValue() > card.getNumValue()) //higher card wins
                                                                                         ^
                                                                                          {
/home/user/ECE350Final/src/Deck.cpp:214:90: warning: statement should be inside braces [readability-braces-around-statements]
    if(deck[i].getSuit() == card.getSuit() && deck[i].getNumValue() > card.getNumValue()) //higher card wins
                                                                                         ^
                                                                                          {
/home/user/ECE350Final/src/Deck.cpp:217:11: warning: statement should be inside braces [google-readability-braces-around-statements]
  if(!win) //if no winning cards, return empty card
          ^
           {
/home/user/ECE350Final/src/Deck.cpp:217:11: warning: statement should be inside braces [hicpp-braces-around-statements]
  if(!win) //if no winning cards, return empty card
          ^
           {
/home/user/ECE350Final/src/Deck.cpp:217:11: warning: statement should be inside braces [readability-braces-around-statements]
  if(!win) //if no winning cards, return empty card
          ^
           {
/home/user/ECE350Final/src/Deck.cpp:238:56: warning: statement should be inside braces [google-readability-braces-around-statements]
    if(c.getSuit() == trump && card.getSuit() != trump) //trump wins
                                                       ^
                                                        {
/home/user/ECE350Final/src/Deck.cpp:238:56: warning: statement should be inside braces [hicpp-braces-around-statements]
    if(c.getSuit() == trump && card.getSuit() != trump) //trump wins
                                                       ^
                                                        {
/home/user/ECE350Final/src/Deck.cpp:238:56: warning: statement should be inside braces [readability-braces-around-statements]
    if(c.getSuit() == trump && card.getSuit() != trump) //trump wins
                                                       ^
                                                        {
/home/user/ECE350Final/src/Deck.cpp:240:78: warning: statement should be inside braces [google-readability-braces-around-statements]
    if(c.getSuit() == card.getSuit() && c.getNumValue() > card.getNumValue()) //higher card wins
                                                                             ^
                                                                              {
/home/user/ECE350Final/src/Deck.cpp:240:78: warning: statement should be inside braces [hicpp-braces-around-statements]
    if(c.getSuit() == card.getSuit() && c.getNumValue() > card.getNumValue()) //higher card wins
                                                                             ^
                                                                              {
/home/user/ECE350Final/src/Deck.cpp:240:78: warning: statement should be inside braces [readability-braces-around-statements]
    if(c.getSuit() == card.getSuit() && c.getNumValue() > card.getNumValue()) //higher card wins
                                                                             ^
                                                                              {
/home/user/ECE350Final/src/Deck.cpp:253:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
bool Deck::checkValue(Deck values){
~~~~       ^
auto                               -> bool
/home/user/ECE350Final/src/Deck.cpp:271:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
Card Deck::findHigh(char suit){
~~~~       ^
auto                           -> Card
/home/user/ECE350Final/src/Deck.cpp:276:76: warning: statement should be inside braces [google-readability-braces-around-statements]
      if(max.getSuit() == 'X' || deck[i].getNumValue() > max.getNumValue())
                                                                           ^
                                                                            {
/home/user/ECE350Final/src/Deck.cpp:276:76: warning: statement should be inside braces [hicpp-braces-around-statements]
      if(max.getSuit() == 'X' || deck[i].getNumValue() > max.getNumValue())
                                                                           ^
                                                                            {
/home/user/ECE350Final/src/Deck.cpp:276:76: warning: statement should be inside braces [readability-braces-around-statements]
      if(max.getSuit() == 'X' || deck[i].getNumValue() > max.getNumValue())
                                                                           ^
                                                                            {
/home/user/ECE350Final/src/Deck.cpp:280:40: warning: statement should be inside braces [google-readability-braces-around-statements]
  if(max.getSuit() == 'X' && size != 0)
                                       ^
                                        {
/home/user/ECE350Final/src/Deck.cpp:280:40: warning: statement should be inside braces [hicpp-braces-around-statements]
  if(max.getSuit() == 'X' && size != 0)
                                       ^
                                        {
/home/user/ECE350Final/src/Deck.cpp:280:40: warning: statement should be inside braces [readability-braces-around-statements]
  if(max.getSuit() == 'X' && size != 0)
                                       ^
                                        {
/home/user/ECE350Final/src/Deck.cpp:285:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
Card Deck::findHigh(){
~~~~       ^
auto                  -> Card
/home/user/ECE350Final/src/Deck.cpp:289:74: warning: statement should be inside braces [google-readability-braces-around-statements]
    if(max.getSuit() == 'X' || deck[i].getNumValue() > max.getNumValue())
                                                                         ^
                                                                          {
/home/user/ECE350Final/src/Deck.cpp:289:74: warning: statement should be inside braces [hicpp-braces-around-statements]
    if(max.getSuit() == 'X' || deck[i].getNumValue() > max.getNumValue())
                                                                         ^
                                                                          {
/home/user/ECE350Final/src/Deck.cpp:289:74: warning: statement should be inside braces [readability-braces-around-statements]
    if(max.getSuit() == 'X' || deck[i].getNumValue() > max.getNumValue())
                                                                         ^
                                                                          {
/home/user/ECE350Final/src/Deck.cpp:303:22: warning: redundant cast to the same type [google-readability-casting]
  for(int i = 0; i < (int)table.getSize(); i++){
                     ^~~~~
/home/user/ECE350Final/src/Deck.cpp:309:12: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
bool Deck::replenish(Deck &deck){
~~~~       ^
auto                             -> bool
/home/user/ECE350Final/src/Deck.cpp:310:25: warning: 6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers]
  for(int i = size; i < 6; i++){
                        ^
/home/user/ECE350Final/src/Deck.cpp:310:25: warning: 6 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
Suppressed 22953 warnings (22953 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

Analiziram fajl: ../src/main.cpp
14802 warnings generated.
/home/user/ECE350Final/src/main.cpp:6:1: warning: do not use namespace using-directives; use using-declarations instead [google-build-using-namespace]
using namespace std;
^
/home/user/ECE350Final/src/main.cpp:10:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
Card attack(Deck table, Deck &hand, int player);
~~~~ ^
auto                                            -> Card
/home/user/ECE350Final/src/main.cpp:10:31: warning: non-const reference parameter 'hand', make it const or use a pointer [google-runtime-references]
Card attack(Deck table, Deck &hand, int player);
                              ^
/home/user/ECE350Final/src/main.cpp:11:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
Card defend(Card attack, Deck &hand, int player);
~~~~ ^
auto                                             -> Card
/home/user/ECE350Final/src/main.cpp:11:32: warning: non-const reference parameter 'hand', make it const or use a pointer [google-runtime-references]
Card defend(Card attack, Deck &hand, int player);
                               ^
/home/user/ECE350Final/src/main.cpp:13:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int main(){
~~~ ^
auto       -> int
/home/user/ECE350Final/src/main.cpp:43:18: warning: statement should be inside braces [google-readability-braces-around-statements]
  if(player == 1)
                 ^
                  {
/home/user/ECE350Final/src/main.cpp:43:18: warning: statement should be inside braces [hicpp-braces-around-statements]
  if(player == 1)
                 ^
                  {
/home/user/ECE350Final/src/main.cpp:43:18: warning: statement should be inside braces [readability-braces-around-statements]
  if(player == 1)
                 ^
                  {
/home/user/ECE350Final/src/main.cpp:45:7: warning: statement should be inside braces [google-readability-braces-around-statements]
  else
      ^
       {
/home/user/ECE350Final/src/main.cpp:45:7: warning: statement should be inside braces [hicpp-braces-around-statements]
  else
      ^
       {
/home/user/ECE350Final/src/main.cpp:45:7: warning: statement should be inside braces [readability-braces-around-statements]
  else
      ^
       {
/home/user/ECE350Final/src/main.cpp:61:20: warning: statement should be inside braces [google-readability-braces-around-statements]
    if(player == 1) //choose card
                   ^
                    {
/home/user/ECE350Final/src/main.cpp:61:20: warning: statement should be inside braces [hicpp-braces-around-statements]
    if(player == 1) //choose card
                   ^
                    {
/home/user/ECE350Final/src/main.cpp:61:20: warning: statement should be inside braces [readability-braces-around-statements]
    if(player == 1) //choose card
                   ^
                    {
/home/user/ECE350Final/src/main.cpp:63:9: warning: statement should be inside braces [google-readability-braces-around-statements]
    else //otherwise, computer goes.
        ^
         {
/home/user/ECE350Final/src/main.cpp:63:9: warning: statement should be inside braces [hicpp-braces-around-statements]
    else //otherwise, computer goes.
        ^
         {
/home/user/ECE350Final/src/main.cpp:63:9: warning: statement should be inside braces [readability-braces-around-statements]
    else //otherwise, computer goes.
        ^
         {
/home/user/ECE350Final/src/main.cpp:74:20: warning: statement should be inside braces [google-readability-braces-around-statements]
    if(player == 1) //if player, ask for card
                   ^
                    {
/home/user/ECE350Final/src/main.cpp:74:20: warning: statement should be inside braces [hicpp-braces-around-statements]
    if(player == 1) //if player, ask for card
                   ^
                    {
/home/user/ECE350Final/src/main.cpp:74:20: warning: statement should be inside braces [readability-braces-around-statements]
    if(player == 1) //if player, ask for card
                   ^
                    {
/home/user/ECE350Final/src/main.cpp:76:9: warning: statement should be inside braces [google-readability-braces-around-statements]
    else //computer. choose card of same suit
        ^
         {
/home/user/ECE350Final/src/main.cpp:76:9: warning: statement should be inside braces [hicpp-braces-around-statements]
    else //computer. choose card of same suit
        ^
         {
/home/user/ECE350Final/src/main.cpp:76:9: warning: statement should be inside braces [readability-braces-around-statements]
    else //computer. choose card of same suit
        ^
         {
/home/user/ECE350Final/src/main.cpp:80:22: warning: statement should be inside braces [google-readability-braces-around-statements]
      if(player == 2) //if computer
                     ^
                      {
/home/user/ECE350Final/src/main.cpp:80:22: warning: statement should be inside braces [hicpp-braces-around-statements]
      if(player == 2) //if computer
                     ^
                      {
/home/user/ECE350Final/src/main.cpp:80:22: warning: statement should be inside braces [readability-braces-around-statements]
      if(player == 2) //if computer
                     ^
                      {
/home/user/ECE350Final/src/main.cpp:88:22: warning: statement should be inside braces [google-readability-braces-around-statements]
      if(player == 1) //player
                     ^
                      {
/home/user/ECE350Final/src/main.cpp:88:22: warning: statement should be inside braces [hicpp-braces-around-statements]
      if(player == 1) //player
                     ^
                      {
/home/user/ECE350Final/src/main.cpp:88:22: warning: statement should be inside braces [readability-braces-around-statements]
      if(player == 1) //player
                     ^
                      {
/home/user/ECE350Final/src/main.cpp:90:11: warning: statement should be inside braces [google-readability-braces-around-statements]
      else
          ^
           {
/home/user/ECE350Final/src/main.cpp:90:11: warning: statement should be inside braces [hicpp-braces-around-statements]
      else
          ^
           {
/home/user/ECE350Final/src/main.cpp:90:11: warning: statement should be inside braces [readability-braces-around-statements]
      else
          ^
           {
/home/user/ECE350Final/src/main.cpp:93:59: warning: statement should be inside braces [google-readability-braces-around-statements]
      if(!hand1.replenish(deck) || !hand2.replenish(deck))
                                                          ^
                                                           {
/home/user/ECE350Final/src/main.cpp:93:59: warning: statement should be inside braces [hicpp-braces-around-statements]
      if(!hand1.replenish(deck) || !hand2.replenish(deck))
                                                          ^
                                                           {
/home/user/ECE350Final/src/main.cpp:93:59: warning: statement should be inside braces [readability-braces-around-statements]
      if(!hand1.replenish(deck) || !hand2.replenish(deck))
                                                          ^
                                                           {
/home/user/ECE350Final/src/main.cpp:98:5: warning: do not use 'else' after 'continue' [readability-else-after-return]
    else{ //defense successful
    ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/user/ECE350Final/src/main.cpp:113:7: warning: do not use 'else' after 'continue' [readability-else-after-return]
      else{
      ^~~~~
/home/user/ECE350Final/src/main.cpp:115:7: warning: variable 'c' is not initialized [cppcoreguidelines-init-variables]
        char c;
             ^
               = 0
/home/user/ECE350Final/src/main.cpp:122:2: warning: do not use 'else' after 'continue' [readability-else-after-return]
        else{ //not attacking. discard table and draw
        ^
note: this fix will not be applied because it overlaps with another fix
/home/user/ECE350Final/src/main.cpp:125:56: warning: statement should be inside braces [google-readability-braces-around-statements]
          if(!hand1.replenish(deck) || !hand2.replenish(deck))
                                                              ^
                                                               {
/home/user/ECE350Final/src/main.cpp:125:56: warning: statement should be inside braces [hicpp-braces-around-statements]
          if(!hand1.replenish(deck) || !hand2.replenish(deck))
                                                              ^
                                                               {
/home/user/ECE350Final/src/main.cpp:125:56: warning: statement should be inside braces [readability-braces-around-statements]
          if(!hand1.replenish(deck) || !hand2.replenish(deck))
                                                              ^
                                                               {
/home/user/ECE350Final/src/main.cpp:134:59: warning: statement should be inside braces [google-readability-braces-around-statements]
      if(!hand1.replenish(deck) || !hand2.replenish(deck))
                                                          ^
                                                           {
/home/user/ECE350Final/src/main.cpp:134:59: warning: statement should be inside braces [hicpp-braces-around-statements]
      if(!hand1.replenish(deck) || !hand2.replenish(deck))
                                                          ^
                                                           {
/home/user/ECE350Final/src/main.cpp:134:59: warning: statement should be inside braces [readability-braces-around-statements]
      if(!hand1.replenish(deck) || !hand2.replenish(deck))
                                                          ^
                                                           {
/home/user/ECE350Final/src/main.cpp:141:18: warning: statement should be inside braces [google-readability-braces-around-statements]
  if(winner == 1)
                 ^
                  {
/home/user/ECE350Final/src/main.cpp:141:18: warning: statement should be inside braces [hicpp-braces-around-statements]
  if(winner == 1)
                 ^
                  {
/home/user/ECE350Final/src/main.cpp:141:18: warning: statement should be inside braces [readability-braces-around-statements]
  if(winner == 1)
                 ^
                  {
/home/user/ECE350Final/src/main.cpp:143:7: warning: statement should be inside braces [google-readability-braces-around-statements]
  else
      ^
       {
/home/user/ECE350Final/src/main.cpp:143:7: warning: statement should be inside braces [hicpp-braces-around-statements]
  else
      ^
       {
/home/user/ECE350Final/src/main.cpp:143:7: warning: statement should be inside braces [readability-braces-around-statements]
  else
      ^
       {
/home/user/ECE350Final/src/main.cpp:148:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
Card attack(Deck table, Deck &hand, int player){
~~~~ ^
auto                                            -> Card
/home/user/ECE350Final/src/main.cpp:157:29: warning: statement should be inside braces [google-readability-braces-around-statements]
    if(table.getSize() == 0) //if there are no cards on the table, any card is valid. (first play)
                            ^
                             {
/home/user/ECE350Final/src/main.cpp:157:29: warning: statement should be inside braces [hicpp-braces-around-statements]
    if(table.getSize() == 0) //if there are no cards on the table, any card is valid. (first play)
                            ^
                             {
/home/user/ECE350Final/src/main.cpp:157:29: warning: statement should be inside braces [readability-braces-around-statements]
    if(table.getSize() == 0) //if there are no cards on the table, any card is valid. (first play)
                            ^
                             {
/home/user/ECE350Final/src/main.cpp:159:9: warning: statement should be inside braces [google-readability-braces-around-statements]
    else //there are cards on the table. must be a value already on the table
        ^
         {
/home/user/ECE350Final/src/main.cpp:159:9: warning: statement should be inside braces [hicpp-braces-around-statements]
    else //there are cards on the table. must be a value already on the table
        ^
         {
/home/user/ECE350Final/src/main.cpp:159:9: warning: statement should be inside braces [readability-braces-around-statements]
    else //there are cards on the table. must be a value already on the table
        ^
         {
/home/user/ECE350Final/src/main.cpp:171:7: warning: use range-based for loop instead [modernize-loop-convert]
      for(int i = 0; i < (int)tableCards.size(); i++){
      ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         (auto & tableCard : tableCards)
/home/user/ECE350Final/src/main.cpp:171:26: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
      for(int i = 0; i < (int)tableCards.size(); i++){
                         ^
note: this fix will not be applied because it overlaps with another fix
/home/user/ECE350Final/src/main.cpp:172:2: warning: use range-based for loop instead [modernize-loop-convert]
        for(int j = 0; j < (int)cards.size(); j++){
        ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
           (auto & card : cards)
/home/user/ECE350Final/src/main.cpp:172:21: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
        for(int j = 0; j < (int)cards.size(); j++){
                           ^
note: this fix will not be applied because it overlaps with another fix
/home/user/ECE350Final/src/main.cpp:174:30: warning: statement should be inside braces [google-readability-braces-around-statements]
            if(max.getSuit() == 'X')
                                    ^
                                     {
/home/user/ECE350Final/src/main.cpp:174:30: warning: statement should be inside braces [hicpp-braces-around-statements]
            if(max.getSuit() == 'X')
                                    ^
                                     {
/home/user/ECE350Final/src/main.cpp:174:30: warning: statement should be inside braces [readability-braces-around-statements]
            if(max.getSuit() == 'X')
                                    ^
                                     {
/home/user/ECE350Final/src/main.cpp:177:54: warning: statement should be inside braces [google-readability-braces-around-statements]
              if(cards[j].getNumValue() > max.getNumValue())
                                                            ^
                                                             {
/home/user/ECE350Final/src/main.cpp:177:54: warning: statement should be inside braces [hicpp-braces-around-statements]
              if(cards[j].getNumValue() > max.getNumValue())
                                                            ^
                                                             {
/home/user/ECE350Final/src/main.cpp:177:54: warning: statement should be inside braces [readability-braces-around-statements]
              if(cards[j].getNumValue() > max.getNumValue())
                                                            ^
                                                             {
/home/user/ECE350Final/src/main.cpp:183:31: warning: statement should be inside braces [google-readability-braces-around-statements]
      if(max.getSuit() != 'X')
                              ^
                               {
/home/user/ECE350Final/src/main.cpp:183:31: warning: statement should be inside braces [hicpp-braces-around-statements]
      if(max.getSuit() != 'X')
                              ^
                               {
/home/user/ECE350Final/src/main.cpp:183:31: warning: statement should be inside braces [readability-braces-around-statements]
      if(max.getSuit() != 'X')
                              ^
                               {
/home/user/ECE350Final/src/main.cpp:185:11: warning: statement should be inside braces [google-readability-braces-around-statements]
      else
          ^
           {
/home/user/ECE350Final/src/main.cpp:185:11: warning: statement should be inside braces [hicpp-braces-around-statements]
      else
          ^
           {
/home/user/ECE350Final/src/main.cpp:185:11: warning: statement should be inside braces [readability-braces-around-statements]
      else
          ^
           {
/home/user/ECE350Final/src/main.cpp:194:6: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
Card defend(Card attack, Deck &hand, int player){
~~~~ ^
auto                                             -> Card
/home/user/ECE350Final/src/main.cpp:199:3: warning: do not use 'else' after 'return' [readability-else-after-return]
  else{ //computer
  ^~~~~~~~~~~~~~~~
/home/user/ECE350Final/src/main.cpp:203:5: warning: use range-based for loop instead [modernize-loop-convert]
    for(int i = 0; i < (int)cards.size(); i++){
    ^
note: this fix will not be applied because it overlaps with another fix
/home/user/ECE350Final/src/main.cpp:203:24: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
    for(int i = 0; i < (int)cards.size(); i++){
                       ^
note: this fix will not be applied because it overlaps with another fix
/home/user/ECE350Final/src/main.cpp:212:7: warning: use range-based for loop instead [modernize-loop-convert]
      for(int i = 0; i < (int)cards.size(); i++){
      ^
note: this fix will not be applied because it overlaps with another fix
/home/user/ECE350Final/src/main.cpp:212:26: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
      for(int i = 0; i < (int)cards.size(); i++){
                         ^
note: this fix will not be applied because it overlaps with another fix
Suppressed 14721 warnings (14721 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

